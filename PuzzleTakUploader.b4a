Build1=Default,ir.puzzletak.uploader
File1=snow.png
FileGroup1=New Group
Group=Default Group
Library1=appcompat
Library10=runtimepermissions
Library11=sql
Library12=uploadfilephp
Library13=xmllayoutbuilder
Library14=xui
Library15=ptx_snowfallview
Library2=bm_textviewadvance
Library3=contentresolver
Library4=core
Library5=javaobject
Library6=phone
Library7=puzzletak_geturlsizetime
Library8=reflection
Library9=rippledrawable
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="31"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~SetApplicationAttribute(android:usesCleartextTraffic, "true")~\n~SetApplicationAttribute(android:theme, "@style/MyAppThemeLight")~\n~CreateResource(values, themestyle.xml,~\n~<resources>~\n~	~\n~	    <style name="MyAppThemeLight" parent="@style/Theme.AppCompat.Light">~\n~		  <item name="android:windowBackground">#FFFFFF</item>~\n~        <item name="colorPrimary">#FFFFFF</item>~\n~        <item name="colorPrimaryDark">#FFFFFF</item>~\n~        <item name="colorAccent">#FFA950DD</item>~\n~		 <item name="android:navigationBarColor">#FFFFFF</item>~\n~		 <item name="android:textColorPrimary">#1B1B1B</item>~\n~		 <item name="android:statusBarColor">#FFFFFF</item>~\n~		 <item name="popupMenuStyle">@style/PopupMenuLight</item>~\n~		<item name="windowActionBar">false</item>~\n~~\n~        <item name="windowNoTitle">true</item>       ~\n~        <item name="windowActionModeOverlay">true</item>~\n~    </style>~\n~	~\n~	    <style name="MyAppThemeDark" parent="@style/Theme.AppCompat">~\n~        <item name="android:windowBackground">#1B1B1B</item>~\n~        <item name="colorPrimary">#1B1B1B</item>~\n~        <item name="colorPrimaryDark">#1B1B1B</item>~\n~		 <item name="android:textColorPrimary">#FFFFFF</item>~\n~        <item name="colorAccent">#FFA950DD</item>~\n~		 <item name="android:navigationBarColor">#1B1B1B</item>~\n~		 <item name="android:statusBarColor">#1B1B1B</item>~\n~		<item name="windowActionBar">false</item>~\n~		<item name="popupMenuStyle">@style/PopupMenuDark</item>~\n~        <item name="windowNoTitle">true</item>     ~\n~        <item name="windowActionModeOverlay">true</item>~\n~    </style>~\n~	~\n~	<style name="PopupMenuDark" parent="@style/Theme.AppCompat">~\n~    <item name="android:popupBackground">#1B1B1B</item>~\n~</style>~\n~	~\n~	<style name="PopupMenuLight" parent="@style/Theme.AppCompat.Light">~\n~    <item name="android:popupBackground">#FFFFFF</item>~\n~</style>~\n~	~\n~</resources>~\n~)~\n~~\n~SetApplicationAttribute(android:requestLegacyExternalStorage, true)~\n~AddPermission(android.permission.READ_EXTERNAL_STORAGE)~\n~AddPermission(android.permission.WRITE_EXTERNAL_STORAGE)~\n~
Module1=Starter
Module2=Utils
NumberOfFiles=1
NumberOfLibraries=15
NumberOfModules=2
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: snow
	#VersionCode: 1
	#VersionName: 1.0.0
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#AdditionalRes:../resicon
	#AdditionalRes:../res_snowfall
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
End Sub

Sub Globals

	Dim pta As PTX_SnowfallView
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Utils.SetStatusBarColor(Colors.White,Colors.White)
	Activity.Color = Colors.Gray

    
	pta.Initialize("")
	Activity.AddView(pta,0%x,0%x,100%x,100%y)
	pta.Color = Colors.Black
	
	pta.EnableAlphaFade = True
	pta.EnableRandomCurving = True
'	pta.WholeAnimateTiming = 10000
	pta.AnimateDuration = 10000
	pta.GenerateSnowTiming = 45
	pta.ImageBitmap = LoadBitmap(File.DirAssets,"snow.png")
	pta.setRandomSnowSizeRange(25,1)
	pta.setCurvingRandom(180,90)
	pta.init
	pta.startSnowing
	

End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub
